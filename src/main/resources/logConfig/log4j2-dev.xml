<?xml version="1.0" encoding="UTF-8"?>

<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<!--设置log4j2的自身log级别为warn-->
<configuration status="warn" monitorInterval="60">

    <properties>
        <property name="logpath" value="./logs" />
    </properties>

    <appenders>
        <!-- 控制台打印 -->
        <Console name="CONSOLE" target="SYSTEM_OUT">
            <PatternLayout pattern="%d|%t|%X{uid}|%-5level|%c.%M:%L|%m%n"/>
        </Console>

        <!-- 存储info级别日志 -->
        <RollingRandomAccessFile name="INFO" immediateFlush="true" bufferSize="1024" fileName="${logpath}/info.log" filePattern="${logpath}/info.log.%d{yyyy-MM-dd}.gz">
            <PatternLayout pattern="%d|%t|%X{uid}|%-5level|%c.%M:%L|%m%n"/>
            <TimeBasedTriggeringPolicy/>
            <DefaultRolloverStrategy>
                <Delete basePath="${logpath}" maxDepth="2">
                    <IfFileName glob="info.log.*.gz"/>
                    <IfLastModified age="30d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingRandomAccessFile>

        <!-- 存储error级别日志 -->
        <RollingRandomAccessFile name="ERROR" immediateFlush="true" bufferSize="4096" fileName="${logpath}/error.log" filePattern="${logpath}/error.log.%d{yyyy-MM-dd}.gz" ignoreExceptions="false">
            <PatternLayout pattern="%d|%t|%X{uid}|%-5level|%c.%M:%L|%m%n"/>
            <Filters>
                <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <TimeBasedTriggeringPolicy/>
            <DefaultRolloverStrategy>
                <Delete basePath="${logpath}" maxDepth="2">
                    <IfFileName glob="error.log.*.gz"/>
                    <IfLastModified age="30d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingRandomAccessFile>

    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>

        <Root level="INFO" includeLocation="true">
            <!--开发过程可以开启，生产要求屏蔽-->
            <AppenderRef ref="CONSOLE"/>
            <AppenderRef ref="INFO"/>
            <AppenderRef ref="ERROR"/>
        </Root>

    </loggers>

</configuration>